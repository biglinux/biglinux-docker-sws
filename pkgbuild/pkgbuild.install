# Executed after package installation
post_install() {
	# Determines the current user during package installation.
	if [ -n "$SUDO_USER" ]; then
        CURRENT_USER=$SUDO_USER
    elif [ -n "$PKEXEC_UID" ]; then
        CURRENT_USER=$(getent passwd "${PKEXEC_UID}" | cut -d: -f1)
    else
        echo "Could not determine the user name."
        exit 1
    fi
	
	# Check if Docker is installed
	if ! command -v docker >/dev/null 2>&1; then
		echo "The Docker package is not installed. Please install it before continuing."
		exit 1
	fi

	# Start the SWS container using docker-compose
    echo "Starting the Static Web Server container..."

    # Expand $CURRENT_USER and execute docker-compose with eval
    eval "HOME=/home/$CURRENT_USER docker-compose -f /etc/docker-biglinux/sws/docker-compose.yml up -d"
    
    # Symlink docker-compose.yml to Docker/SWS folder
    echo "Creating symlink to docker-compose.yml..."
    ln -s /etc/docker-biglinux/sws/docker-compose.yml /home/$CURRENT_USER/Docker/SWS/docker-compose.yml
    
    # Copy file index.html to Docker/SWS folder
    cp -f /etc/docker-biglinux/sws/index.html /home/$SUDO_USER/Docker/SWS/html/
    
    # Set the correct owner and group for the Docker folder and its contents
    echo "Setting correct permissions for Docker folder..."
    chown -R $CURRENT_USER:$CURRENT_USER /home/$CURRENT_USER/Docker/SWS
}

# Upgrade package
post_upgrade() {
	# Determines the current user during package installation.
	if [ -n "$SUDO_USER" ]; then
        CURRENT_USER=$SUDO_USER
    elif [ -n "$PKEXEC_UID" ]; then
        CURRENT_USER=$(getent passwd "${PKEXEC_UID}" | cut -d: -f1)
    else
        echo "Could not determine the user name."
        exit 1
    fi
    
    # Copy file index.html to Docker/SWS folder only if it doesn't exist
    if [ ! -f /home/$CURRENT_USER/Docker/SWS/html/index.html ]; then
        echo "Copying index.html to Docker/SWS folder..."
        cp -f /etc/docker-biglinux/sws/index.html /home/$CURRENT_USER/Docker/SWS/html/
    else
        echo "File index.html already exists, skipping copy..."
    fi
    
    # Set the correct owner and group for the Docker folder and its contents
    echo "Setting correct permissions for Docker folder..."
    chown -R $CURRENT_USER:$CURRENT_USER /home/$CURRENT_USER/Docker/SWS
}

# Executed before package removal
pre_remove() {
	# Stop and remove the SWS container
	echo "Stopping and removing the Static Web Server container..."
	docker-compose -f /etc/docker-biglinux/sws/docker-compose.yml down
	
	# Remove symlink to docker-compose.yml in Docker/SWS folder
    echo "Removing symbolic link to docker-compose.yml..."
    rm -f /home/$CURRENT_USER/Docker/SWS/docker-compose.yml
}

# Executed after package removal
post_remove() {
	# Remove the Docker image
    echo "Removing the Static Web Server Docker image..."
    docker rmi joseluisq/static-web-server:latest
}
